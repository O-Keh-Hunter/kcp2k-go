// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: lockstep.proto

package lockstep

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LockStepMessage_MessageType int32

const (
	LockStepMessage_UNKNOWN      LockStepMessage_MessageType = 0
	LockStepMessage_FRAME        LockStepMessage_MessageType = 1
	LockStepMessage_INPUT        LockStepMessage_MessageType = 2
	LockStepMessage_JOIN_ROOM    LockStepMessage_MessageType = 3
	LockStepMessage_LEAVE_ROOM   LockStepMessage_MessageType = 4
	LockStepMessage_FRAME_REQ    LockStepMessage_MessageType = 5
	LockStepMessage_FRAME_RESP   LockStepMessage_MessageType = 6
	LockStepMessage_PING         LockStepMessage_MessageType = 7
	LockStepMessage_PONG         LockStepMessage_MessageType = 8
	LockStepMessage_START        LockStepMessage_MessageType = 9
	LockStepMessage_END          LockStepMessage_MessageType = 10
	LockStepMessage_PLAYER_STATE LockStepMessage_MessageType = 11
	LockStepMessage_ROOM_STATE   LockStepMessage_MessageType = 12
	LockStepMessage_ERROR        LockStepMessage_MessageType = 13
)

// Enum value maps for LockStepMessage_MessageType.
var (
	LockStepMessage_MessageType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "FRAME",
		2:  "INPUT",
		3:  "JOIN_ROOM",
		4:  "LEAVE_ROOM",
		5:  "FRAME_REQ",
		6:  "FRAME_RESP",
		7:  "PING",
		8:  "PONG",
		9:  "START",
		10: "END",
		11: "PLAYER_STATE",
		12: "ROOM_STATE",
		13: "ERROR",
	}
	LockStepMessage_MessageType_value = map[string]int32{
		"UNKNOWN":      0,
		"FRAME":        1,
		"INPUT":        2,
		"JOIN_ROOM":    3,
		"LEAVE_ROOM":   4,
		"FRAME_REQ":    5,
		"FRAME_RESP":   6,
		"PING":         7,
		"PONG":         8,
		"START":        9,
		"END":          10,
		"PLAYER_STATE": 11,
		"ROOM_STATE":   12,
		"ERROR":        13,
	}
)

func (x LockStepMessage_MessageType) Enum() *LockStepMessage_MessageType {
	p := new(LockStepMessage_MessageType)
	*p = x
	return p
}

func (x LockStepMessage_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockStepMessage_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_lockstep_proto_enumTypes[0].Descriptor()
}

func (LockStepMessage_MessageType) Type() protoreflect.EnumType {
	return &file_lockstep_proto_enumTypes[0]
}

func (x LockStepMessage_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockStepMessage_MessageType.Descriptor instead.
func (LockStepMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{9, 0}
}

// 缺省为None。当用户的Input数据需要转发给GameSvr（对应LockStep Server的WatchRoom功能），可以将该参数置为Subscribe
type InputMessage_InputFlag int32

const (
	InputMessage_None              InputMessage_InputFlag = 0
	InputMessage_Subscribe         InputMessage_InputFlag = 1  // 当用户的Input数据需要转发给GameSvr
	InputMessage_DuplicateUpstream InputMessage_InputFlag = 16 // 上行冗余，只有在rawUdp参数为true的时候才有效
)

// Enum value maps for InputMessage_InputFlag.
var (
	InputMessage_InputFlag_name = map[int32]string{
		0:  "None",
		1:  "Subscribe",
		16: "DuplicateUpstream",
	}
	InputMessage_InputFlag_value = map[string]int32{
		"None":              0,
		"Subscribe":         1,
		"DuplicateUpstream": 16,
	}
)

func (x InputMessage_InputFlag) Enum() *InputMessage_InputFlag {
	p := new(InputMessage_InputFlag)
	*p = x
	return p
}

func (x InputMessage_InputFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InputMessage_InputFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_lockstep_proto_enumTypes[1].Descriptor()
}

func (InputMessage_InputFlag) Type() protoreflect.EnumType {
	return &file_lockstep_proto_enumTypes[1]
}

func (x InputMessage_InputFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InputMessage_InputFlag.Descriptor instead.
func (InputMessage_InputFlag) EnumDescriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{10, 0}
}

// 基础类型定义
type RelayData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 游戏每次调用 LockSteper::Input() 发包的时，会在数据里绑定一个单向增长的 id
	// 当游戏发现 RelayData.SequenceId 不连续的时候，说明有丢包、或者乱序的情况发生
	SequenceId uint32 `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	// 在游戏过程中，LockStep Server分配给每个玩家的唯一标识，用于区分不同玩家的数据
	// -1表示服务器插帧
	PlayerId uint32 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// 如果 RelayData.PlayerId == Self.PlayerId 时，才有意义
	// 表示用户自已的上行包，从调用 LockSteper::Input() 到 LockStep 客户端收到这个包的总延时，单位ms
	// 方便游戏收集用户输入延时
	DelayMs uint32 `protobuf:"varint,3,opt,name=delay_ms,json=delayMs,proto3" json:"delay_ms,omitempty"`
	// “位域”标志。第0位：标识玩家是否在线。
	// 1：在线 0：不在线。
	// GameClient可以直接通过调用 IsPlayerOnline 这个函数判断玩家是否在线。其他位保留。
	Flag uint32 `protobuf:"varint,4,opt,name=flag,proto3" json:"flag,omitempty"`
	// 游戏自定义的数据，一般都是每个玩家，调用 Input 接口所对应的数据。
	Data          []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelayData) Reset() {
	*x = RelayData{}
	mi := &file_lockstep_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayData) ProtoMessage() {}

func (x *RelayData) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayData.ProtoReflect.Descriptor instead.
func (*RelayData) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{0}
}

func (x *RelayData) GetSequenceId() uint32 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

func (x *RelayData) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *RelayData) GetDelayMs() uint32 {
	if x != nil {
		return x.DelayMs
	}
	return 0
}

func (x *RelayData) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *RelayData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Frame struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 由LockStep Server生成的每一帧都有的唯一标识，从0开始递增。
	FrameId uint32 `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	// 表示当前 Frame 的收包时刻，单位ms
	// 方便游戏收集当前网络延时、抖动情况
	RecvTickMs uint32 `protobuf:"varint,2,opt,name=recv_tick_ms,json=recvTickMs,proto3" json:"recv_tick_ms,omitempty"`
	// 表示 FrameInfo.DataCollection 的可用长度，用于消除 GC
	// 用法见ReadFrame接口说明
	ValidDataCount uint32 `protobuf:"varint,3,opt,name=valid_data_count,json=validDataCount,proto3" json:"valid_data_count,omitempty"`
	// 上一帧到这一帧中间，服务器收集的用户输入，每一个RelayData表示一个用户发包
	DataCollection []*RelayData `protobuf:"bytes,4,rep,name=DataCollection,proto3" json:"DataCollection,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Frame) Reset() {
	*x = Frame{}
	mi := &file_lockstep_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{1}
}

func (x *Frame) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *Frame) GetRecvTickMs() uint32 {
	if x != nil {
		return x.RecvTickMs
	}
	return 0
}

func (x *Frame) GetValidDataCount() uint32 {
	if x != nil {
		return x.ValidDataCount
	}
	return 0
}

func (x *Frame) GetDataCollection() []*RelayData {
	if x != nil {
		return x.DataCollection
	}
	return nil
}

type PlayerState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Online        bool                   `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	LastFrameId   int64                  `protobuf:"varint,3,opt,name=last_frame_id,json=lastFrameId,proto3" json:"last_frame_id,omitempty"`
	Ping          int64                  `protobuf:"varint,4,opt,name=ping,proto3" json:"ping,omitempty"`
	LastPingTime  int64                  `protobuf:"varint,5,opt,name=last_ping_time,json=lastPingTime,proto3" json:"last_ping_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerState) Reset() {
	*x = PlayerState{}
	mi := &file_lockstep_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerState) ProtoMessage() {}

func (x *PlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerState.ProtoReflect.Descriptor instead.
func (*PlayerState) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerState) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerState) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *PlayerState) GetLastFrameId() int64 {
	if x != nil {
		return x.LastFrameId
	}
	return 0
}

func (x *PlayerState) GetPing() int64 {
	if x != nil {
		return x.Ping
	}
	return 0
}

func (x *PlayerState) GetLastPingTime() int64 {
	if x != nil {
		return x.LastPingTime
	}
	return 0
}

type RoomState struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         uint32                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	CurrentPlayers uint32                 `protobuf:"varint,2,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"`
	MaxPlayers     uint32                 `protobuf:"varint,3,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	StartTime      int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        int64                  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CurrentFrameId uint32                 `protobuf:"varint,6,opt,name=current_frame_id,json=currentFrameId,proto3" json:"current_frame_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RoomState) Reset() {
	*x = RoomState{}
	mi := &file_lockstep_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomState) ProtoMessage() {}

func (x *RoomState) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomState.ProtoReflect.Descriptor instead.
func (*RoomState) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{3}
}

func (x *RoomState) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoomState) GetCurrentPlayers() uint32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *RoomState) GetMaxPlayers() uint32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *RoomState) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RoomState) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RoomState) GetCurrentFrameId() uint32 {
	if x != nil {
		return x.CurrentFrameId
	}
	return 0
}

type FrameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrameId       uint32                 `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Count         uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameRequest) Reset() {
	*x = FrameRequest{}
	mi := &file_lockstep_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameRequest) ProtoMessage() {}

func (x *FrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameRequest.ProtoReflect.Descriptor instead.
func (*FrameRequest) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{4}
}

func (x *FrameRequest) GetFrameId() uint32 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *FrameRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FrameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Frames        []*Frame               `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameResponse) Reset() {
	*x = FrameResponse{}
	mi := &file_lockstep_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameResponse) ProtoMessage() {}

func (x *FrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameResponse.ProtoReflect.Descriptor instead.
func (*FrameResponse) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{5}
}

func (x *FrameResponse) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

func (x *FrameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FrameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type JoinRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	PlayerId      uint32                 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoomRequest) Reset() {
	*x = JoinRoomRequest{}
	mi := &file_lockstep_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomRequest) ProtoMessage() {}

func (x *JoinRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{6}
}

func (x *JoinRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinRoomRequest) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type PingMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PlayerId      uint32                 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingMessage) Reset() {
	*x = PingMessage{}
	mi := &file_lockstep_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMessage) ProtoMessage() {}

func (x *PingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMessage.ProtoReflect.Descriptor instead.
func (*PingMessage) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{7}
}

func (x *PingMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PingMessage) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type PongMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PlayerId      uint32                 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PongMessage) Reset() {
	*x = PongMessage{}
	mi := &file_lockstep_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongMessage) ProtoMessage() {}

func (x *PongMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongMessage.ProtoReflect.Descriptor instead.
func (*PongMessage) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{8}
}

func (x *PongMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PongMessage) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

// 主要的网络消息
type LockStepMessage struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Type          LockStepMessage_MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=lockstep.LockStepMessage_MessageType" json:"type,omitempty"`
	Payload       []byte                      `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockStepMessage) Reset() {
	*x = LockStepMessage{}
	mi := &file_lockstep_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockStepMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockStepMessage) ProtoMessage() {}

func (x *LockStepMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockStepMessage.ProtoReflect.Descriptor instead.
func (*LockStepMessage) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{9}
}

func (x *LockStepMessage) GetType() LockStepMessage_MessageType {
	if x != nil {
		return x.Type
	}
	return LockStepMessage_UNKNOWN
}

func (x *LockStepMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// 输入消息
type InputMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 游戏每次调用 LockSteper::Input() 发包的时，会在数据里绑定一个单向增长的 id
	// 当游戏发现 RelayData.SequenceId 不连续的时候，说明有丢包、或者乱序的情况发生
	SequenceId uint32 `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	// 如果 RelayData.PlayerId == Self.PlayerId 时，才有意义
	// 表示用户自已的上行包，从调用 LockSteper::Input() 到 LockStep 客户端收到这个包的总延时，单位ms
	// 方便游戏收集用户输入延时
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// 游戏自定义数据
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// Input数据的控制标志，按bit位组合
	Flag          InputMessage_InputFlag `protobuf:"varint,4,opt,name=flag,proto3,enum=lockstep.InputMessage_InputFlag" json:"flag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputMessage) Reset() {
	*x = InputMessage{}
	mi := &file_lockstep_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMessage) ProtoMessage() {}

func (x *InputMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMessage.ProtoReflect.Descriptor instead.
func (*InputMessage) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{10}
}

func (x *InputMessage) GetSequenceId() uint32 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

func (x *InputMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *InputMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InputMessage) GetFlag() InputMessage_InputFlag {
	if x != nil {
		return x.Flag
	}
	return InputMessage_None
}

// 游戏开始消息
type GameStartMessage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CurrentFrameId     uint32                 `protobuf:"varint,1,opt,name=current_frame_id,json=currentFrameId,proto3" json:"current_frame_id,omitempty"`
	GameAlreadyRunning bool                   `protobuf:"varint,2,opt,name=game_already_running,json=gameAlreadyRunning,proto3" json:"game_already_running,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GameStartMessage) Reset() {
	*x = GameStartMessage{}
	mi := &file_lockstep_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStartMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStartMessage) ProtoMessage() {}

func (x *GameStartMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStartMessage.ProtoReflect.Descriptor instead.
func (*GameStartMessage) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{11}
}

func (x *GameStartMessage) GetCurrentFrameId() uint32 {
	if x != nil {
		return x.CurrentFrameId
	}
	return 0
}

func (x *GameStartMessage) GetGameAlreadyRunning() bool {
	if x != nil {
		return x.GameAlreadyRunning
	}
	return false
}

// 玩家状态消息
type PlayerStateMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      uint32                 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	State         *PlayerState           `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"` // 状态变更原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerStateMessage) Reset() {
	*x = PlayerStateMessage{}
	mi := &file_lockstep_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStateMessage) ProtoMessage() {}

func (x *PlayerStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStateMessage.ProtoReflect.Descriptor instead.
func (*PlayerStateMessage) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{12}
}

func (x *PlayerStateMessage) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerStateMessage) GetState() *PlayerState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *PlayerStateMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 房间状态消息
type RoomStateMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	State         *RoomState             `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"` // 状态变更原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomStateMessage) Reset() {
	*x = RoomStateMessage{}
	mi := &file_lockstep_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomStateMessage) ProtoMessage() {}

func (x *RoomStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomStateMessage.ProtoReflect.Descriptor instead.
func (*RoomStateMessage) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{13}
}

func (x *RoomStateMessage) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomStateMessage) GetState() *RoomState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *RoomStateMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 错误消息
type ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_lockstep_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{14}
}

func (x *ErrorMessage) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorMessage) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// 房间配置（用于创建房间）
type RoomConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxPlayers    uint32                 `protobuf:"varint,1,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	MinPlayers    uint32                 `protobuf:"varint,2,opt,name=min_players,json=minPlayers,proto3" json:"min_players,omitempty"`
	FrameRate     uint32                 `protobuf:"varint,3,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	RetryWindow   uint32                 `protobuf:"varint,4,opt,name=retry_window,json=retryWindow,proto3" json:"retry_window,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomConfig) Reset() {
	*x = RoomConfig{}
	mi := &file_lockstep_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomConfig) ProtoMessage() {}

func (x *RoomConfig) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomConfig.ProtoReflect.Descriptor instead.
func (*RoomConfig) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{15}
}

func (x *RoomConfig) GetMaxPlayers() uint32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *RoomConfig) GetMinPlayers() uint32 {
	if x != nil {
		return x.MinPlayers
	}
	return 0
}

func (x *RoomConfig) GetFrameRate() uint32 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *RoomConfig) GetRetryWindow() uint32 {
	if x != nil {
		return x.RetryWindow
	}
	return 0
}

// 服务器统计信息
type ServerStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rooms         uint32                 `protobuf:"varint,1,opt,name=rooms,proto3" json:"rooms,omitempty"`
	TotalPlayers  uint32                 `protobuf:"varint,2,opt,name=total_players,json=totalPlayers,proto3" json:"total_players,omitempty"`
	Running       bool                   `protobuf:"varint,3,opt,name=running,proto3" json:"running,omitempty"`
	Uptime        int64                  `protobuf:"varint,4,opt,name=uptime,proto3" json:"uptime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerStats) Reset() {
	*x = ServerStats{}
	mi := &file_lockstep_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStats) ProtoMessage() {}

func (x *ServerStats) ProtoReflect() protoreflect.Message {
	mi := &file_lockstep_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStats.ProtoReflect.Descriptor instead.
func (*ServerStats) Descriptor() ([]byte, []int) {
	return file_lockstep_proto_rawDescGZIP(), []int{16}
}

func (x *ServerStats) GetRooms() uint32 {
	if x != nil {
		return x.Rooms
	}
	return 0
}

func (x *ServerStats) GetTotalPlayers() uint32 {
	if x != nil {
		return x.TotalPlayers
	}
	return 0
}

func (x *ServerStats) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *ServerStats) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

var File_lockstep_proto protoreflect.FileDescriptor

const file_lockstep_proto_rawDesc = "" +
	"\n" +
	"\x0elockstep.proto\x12\blockstep\"\x8c\x01\n" +
	"\tRelayData\x12\x1f\n" +
	"\vsequence_id\x18\x01 \x01(\rR\n" +
	"sequenceId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\rR\bplayerId\x12\x19\n" +
	"\bdelay_ms\x18\x03 \x01(\rR\adelayMs\x12\x12\n" +
	"\x04flag\x18\x04 \x01(\rR\x04flag\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\"\xab\x01\n" +
	"\x05Frame\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\rR\aframeId\x12 \n" +
	"\frecv_tick_ms\x18\x02 \x01(\rR\n" +
	"recvTickMs\x12(\n" +
	"\x10valid_data_count\x18\x03 \x01(\rR\x0evalidDataCount\x12;\n" +
	"\x0eDataCollection\x18\x04 \x03(\v2\x13.lockstep.RelayDataR\x0eDataCollection\"\x93\x01\n" +
	"\vPlayerState\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x16\n" +
	"\x06online\x18\x02 \x01(\bR\x06online\x12\"\n" +
	"\rlast_frame_id\x18\x03 \x01(\x03R\vlastFrameId\x12\x12\n" +
	"\x04ping\x18\x04 \x01(\x03R\x04ping\x12$\n" +
	"\x0elast_ping_time\x18\x05 \x01(\x03R\flastPingTime\"\xd1\x01\n" +
	"\tRoomState\x12\x16\n" +
	"\x06status\x18\x01 \x01(\rR\x06status\x12'\n" +
	"\x0fcurrent_players\x18\x02 \x01(\rR\x0ecurrentPlayers\x12\x1f\n" +
	"\vmax_players\x18\x03 \x01(\rR\n" +
	"maxPlayers\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\x03R\aendTime\x12(\n" +
	"\x10current_frame_id\x18\x06 \x01(\rR\x0ecurrentFrameId\"?\n" +
	"\fFrameRequest\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\rR\aframeId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\rR\x05count\"h\n" +
	"\rFrameResponse\x12'\n" +
	"\x06frames\x18\x01 \x03(\v2\x0f.lockstep.FrameR\x06frames\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"G\n" +
	"\x0fJoinRoomRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\rR\bplayerId\"H\n" +
	"\vPingMessage\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\rR\bplayerId\"H\n" +
	"\vPongMessage\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\rR\bplayerId\"\xac\x02\n" +
	"\x0fLockStepMessage\x129\n" +
	"\x04type\x18\x01 \x01(\x0e2%.lockstep.LockStepMessage.MessageTypeR\x04type\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"\xc3\x01\n" +
	"\vMessageType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05FRAME\x10\x01\x12\t\n" +
	"\x05INPUT\x10\x02\x12\r\n" +
	"\tJOIN_ROOM\x10\x03\x12\x0e\n" +
	"\n" +
	"LEAVE_ROOM\x10\x04\x12\r\n" +
	"\tFRAME_REQ\x10\x05\x12\x0e\n" +
	"\n" +
	"FRAME_RESP\x10\x06\x12\b\n" +
	"\x04PING\x10\a\x12\b\n" +
	"\x04PONG\x10\b\x12\t\n" +
	"\x05START\x10\t\x12\a\n" +
	"\x03END\x10\n" +
	"\x12\x10\n" +
	"\fPLAYER_STATE\x10\v\x12\x0e\n" +
	"\n" +
	"ROOM_STATE\x10\f\x12\t\n" +
	"\x05ERROR\x10\r\"\xd4\x01\n" +
	"\fInputMessage\x12\x1f\n" +
	"\vsequence_id\x18\x01 \x01(\rR\n" +
	"sequenceId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x04R\ttimestamp\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x124\n" +
	"\x04flag\x18\x04 \x01(\x0e2 .lockstep.InputMessage.InputFlagR\x04flag\";\n" +
	"\tInputFlag\x12\b\n" +
	"\x04None\x10\x00\x12\r\n" +
	"\tSubscribe\x10\x01\x12\x15\n" +
	"\x11DuplicateUpstream\x10\x10\"n\n" +
	"\x10GameStartMessage\x12(\n" +
	"\x10current_frame_id\x18\x01 \x01(\rR\x0ecurrentFrameId\x120\n" +
	"\x14game_already_running\x18\x02 \x01(\bR\x12gameAlreadyRunning\"v\n" +
	"\x12PlayerStateMessage\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\rR\bplayerId\x12+\n" +
	"\x05state\x18\x02 \x01(\v2\x15.lockstep.PlayerStateR\x05state\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"n\n" +
	"\x10RoomStateMessage\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12)\n" +
	"\x05state\x18\x02 \x01(\v2\x13.lockstep.RoomStateR\x05state\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"V\n" +
	"\fErrorMessage\x12\x12\n" +
	"\x04code\x18\x01 \x01(\rR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"\x90\x01\n" +
	"\n" +
	"RoomConfig\x12\x1f\n" +
	"\vmax_players\x18\x01 \x01(\rR\n" +
	"maxPlayers\x12\x1f\n" +
	"\vmin_players\x18\x02 \x01(\rR\n" +
	"minPlayers\x12\x1d\n" +
	"\n" +
	"frame_rate\x18\x03 \x01(\rR\tframeRate\x12!\n" +
	"\fretry_window\x18\x04 \x01(\rR\vretryWindow\"z\n" +
	"\vServerStats\x12\x14\n" +
	"\x05rooms\x18\x01 \x01(\rR\x05rooms\x12#\n" +
	"\rtotal_players\x18\x02 \x01(\rR\ftotalPlayers\x12\x18\n" +
	"\arunning\x18\x03 \x01(\bR\arunning\x12\x16\n" +
	"\x06uptime\x18\x04 \x01(\x03R\x06uptimeB+Z)github.com/O-Keh-Hunter/kcp2k-go/lockstepb\x06proto3"

var (
	file_lockstep_proto_rawDescOnce sync.Once
	file_lockstep_proto_rawDescData []byte
)

func file_lockstep_proto_rawDescGZIP() []byte {
	file_lockstep_proto_rawDescOnce.Do(func() {
		file_lockstep_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lockstep_proto_rawDesc), len(file_lockstep_proto_rawDesc)))
	})
	return file_lockstep_proto_rawDescData
}

var file_lockstep_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_lockstep_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_lockstep_proto_goTypes = []any{
	(LockStepMessage_MessageType)(0), // 0: lockstep.LockStepMessage.MessageType
	(InputMessage_InputFlag)(0),      // 1: lockstep.InputMessage.InputFlag
	(*RelayData)(nil),                // 2: lockstep.RelayData
	(*Frame)(nil),                    // 3: lockstep.Frame
	(*PlayerState)(nil),              // 4: lockstep.PlayerState
	(*RoomState)(nil),                // 5: lockstep.RoomState
	(*FrameRequest)(nil),             // 6: lockstep.FrameRequest
	(*FrameResponse)(nil),            // 7: lockstep.FrameResponse
	(*JoinRoomRequest)(nil),          // 8: lockstep.JoinRoomRequest
	(*PingMessage)(nil),              // 9: lockstep.PingMessage
	(*PongMessage)(nil),              // 10: lockstep.PongMessage
	(*LockStepMessage)(nil),          // 11: lockstep.LockStepMessage
	(*InputMessage)(nil),             // 12: lockstep.InputMessage
	(*GameStartMessage)(nil),         // 13: lockstep.GameStartMessage
	(*PlayerStateMessage)(nil),       // 14: lockstep.PlayerStateMessage
	(*RoomStateMessage)(nil),         // 15: lockstep.RoomStateMessage
	(*ErrorMessage)(nil),             // 16: lockstep.ErrorMessage
	(*RoomConfig)(nil),               // 17: lockstep.RoomConfig
	(*ServerStats)(nil),              // 18: lockstep.ServerStats
}
var file_lockstep_proto_depIdxs = []int32{
	2, // 0: lockstep.Frame.DataCollection:type_name -> lockstep.RelayData
	3, // 1: lockstep.FrameResponse.frames:type_name -> lockstep.Frame
	0, // 2: lockstep.LockStepMessage.type:type_name -> lockstep.LockStepMessage.MessageType
	1, // 3: lockstep.InputMessage.flag:type_name -> lockstep.InputMessage.InputFlag
	4, // 4: lockstep.PlayerStateMessage.state:type_name -> lockstep.PlayerState
	5, // 5: lockstep.RoomStateMessage.state:type_name -> lockstep.RoomState
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_lockstep_proto_init() }
func file_lockstep_proto_init() {
	if File_lockstep_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lockstep_proto_rawDesc), len(file_lockstep_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lockstep_proto_goTypes,
		DependencyIndexes: file_lockstep_proto_depIdxs,
		EnumInfos:         file_lockstep_proto_enumTypes,
		MessageInfos:      file_lockstep_proto_msgTypes,
	}.Build()
	File_lockstep_proto = out.File
	file_lockstep_proto_goTypes = nil
	file_lockstep_proto_depIdxs = nil
}
